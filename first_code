#first thing we do is datacleaning and standardization (standardization is recommended for regularization)
df_no_labels= select(df_training[1:5000,:], Not(:labels))
df_clean_const_no_labels = df_no_labels[:, std.(eachcol(df_no_labels)) .!= 0]
colum_labels= df_training.labels
stand_gene_mach= fit!(machine(Standardizer(), df_clean_const_no_labels));
df_training_stand_no_labels= MLJ.transform(stand_gene_mach,df_clean_const_no_labels)
df_training_stand= hcat(df_training_stand_no_labels, colum_labels)
df_training_stand[:,end-3:end] #to chech if labels were correctly added back 
rename!(df_training_stand,:x1 => :labels)
coerce!(df_training_stand, :labels => Multiclass);

#first try (misclassification rate = 11,7%
gene_mach = machine(MultinomialClassifier(penalty = :none),
                     select(df_training[1:4000,:], Not(:labels)),
	                 df_training.labels[1:4000]) |> fit!
gene_pred_no_opt = predict_mode(gene_mach, select(df_training[4001:5000, :],Not(:labels)))
mean(gene_pred_no_opt .!= df_training.labels[4001:5000])
confusion_matrix(gene_pred_no_opt,df_training.labels[4001:5000])

#try 2 (misclassificatie rate = 13,2%)
gene_mach_2 = machine(MultinomialClassifier(penalty = :none),
                     select(df_training[1:4500,:], Not(:labels)),
	                 df_training.labels[1:4500]) |> fit!
gene_pred_no_opt_2 = predict_mode(gene_mach_2, select(df_training[4501:5000, :],Not(:labels)))
mean(gene_pred_no_opt_2 .!= df_training.labels[4501:5000])
confusion_matrix(gene_pred_no_opt_2,df_training.labels[4501:5000])

#try 3 regularisatie (misclassificatie rate = 10,9%)
gene_fit_reg = machine(MultinomialClassifier(penalty = :l1, lambda = 1e-5),
                        select(df_training[1:4000,:], Not(:labels)),
                        df_training.labels[1:4000])|> fit!
gene_fit_reg_pred = predict_mode(gene_fit_reg, select(df_training[4001:5000, :],Not(:labels)))
mean(gene_fit_reg_pred .!= df_training.labels[4001:5000])
confusion_matrix(gene_fit_reg_pred,df_training.labels[4001:5000])
