#first try (misclassification rate = 11,7%
gene_mach = machine(MultinomialClassifier(penalty = :none),
                     select(df_training[1:4000,:], Not(:labels)),
	                 df_training.labels[1:4000]) |> fit!
gene_pred_no_opt = predict_mode(gene_mach, select(df_training[4001:5000, :],Not(:labels)))
mean(gene_pred_no_opt .!= df_training.labels[4001:5000])
confusion_matrix(gene_pred_no_opt,df_training.labels[4001:5000])

#try 2 (misclassificatie rate = 13,2%)
gene_mach_2 = machine(MultinomialClassifier(penalty = :none),
                     select(df_training[1:4500,:], Not(:labels)),
	                 df_training.labels[1:4500]) |> fit!
gene_pred_no_opt_2 = predict_mode(gene_mach_2, select(df_training[4501:5000, :],Not(:labels)))
mean(gene_pred_no_opt_2 .!= df_training.labels[4501:5000])
confusion_matrix(gene_pred_no_opt_2,df_training.labels[4501:5000])

#try 3 regularisatie (misclassificatie rate = 10,9%)
gene_fit_reg = machine(MultinomialClassifier(penalty = :l1, lambda = 1e-5),
                        select(df_training[1:4000,:], Not(:labels)),
                        df_training.labels[1:4000])|> fit!
gene_fit_reg_pred = predict_mode(gene_fit_reg, select(df_training[4001:5000, :],Not(:labels)))
mean(gene_fit_reg_pred .!= df_training.labels[4001:5000])
confusion_matrix(gene_fit_reg_pred,df_training.labels[4001:5000])






TRYING DIFFERENT VALUES OF LAMBDA FOR MACHINE:
mach = machine(MultinomialClassifier(penalty = :l1, lambda = ...),
                        select(df_training[1:4000,:], Not(:labels)),
                        df_training.labels[1:4000])|> fit!

LAMBDA = 10-2
TRAINING:
negative_loglikelihood
1311.93
misclassification_rate
0.0995
accuracy
0.9005
auc
0.957901
confusion_matrix
              ┌─────────────────────────────────────────┐
              │              Ground Truth               │
┌─────────────┼─────────────┬─────────────┬─────────────┤
│  Predicted  │     CBP     │    KAT5     │    eGFP     │
├─────────────┼─────────────┼─────────────┼─────────────┤
│     CBP     │    1356     │     207     │      1      │
├─────────────┼─────────────┼─────────────┼─────────────┤
│    KAT5     │     126     │    1034     │     34      │
├─────────────┼─────────────┼─────────────┼─────────────┤
│    eGFP     │      1      │     29      │    1212     │
└─────────────┴─────────────┴─────────────┴─────────────┘

VALIDATION:
negative_loglikelihood
360.155
misclassification_rate
0.129
accuracy
0.871
auc
0.932563
confusion_matrix
              ┌─────────────────────────────────────────┐
              │              Ground Truth               │
┌─────────────┼─────────────┬─────────────┬─────────────┤
│  Predicted  │     CBP     │    KAT5     │    eGFP     │
├─────────────┼─────────────┼─────────────┼─────────────┤
│     CBP     │     321     │     62      │      1      │
├─────────────┼─────────────┼─────────────┼─────────────┤
│    KAT5     │     47      │     219     │     13      │
├─────────────┼─────────────┼─────────────┼─────────────┤
│    eGFP     │      1      │      5      │     331     │
└─────────────┴─────────────┴─────────────┴─────────────┘





EVALUATION OF THE MACHINE:

function losses(machine, input, response)
    (negative_loglikelihood = sum(log_loss(predict(machine, input), response)),
     misclassification_rate = mean(predict_mode(machine, input) .!= response),
     accuracy = accuracy(predict_mode(machine, input), response),
     auc = auc(predict(machine, input), response),
	 confusion_matrix = confusion_matrix(predict_mode(machine, input), response)
	)
end;
